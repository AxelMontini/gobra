ASSERT=1
ASSUME=2
PRE=3
POST=4
INV=5
PURE=6
OLD=7
FORALL=8
EXISTS=9
ACCESS=10
IN=11
RANGE=12
SHARED=13
EXCLUSIVE=14
PREDICATE=15
BREAK=16
DEFAULT=17
FUNC=18
INTERFACE=19
SELECT=20
CASE=21
DEFER=22
GO=23
MAP=24
STRUCT=25
CHAN=26
ELSE=27
GOTO=28
PACKAGE=29
SWITCH=30
CONST=31
FALLTHROUGH=32
IF=33
TYPE=34
CONTINUE=35
FOR=36
IMPORT=37
RETURN=38
VAR=39
NIL_LIT=40
IDENTIFIER=41
L_PAREN=42
R_PAREN=43
L_CURLY=44
R_CURLY=45
L_BRACKET=46
R_BRACKET=47
ASSIGN=48
COMMA=49
SEMI=50
COLON=51
DOT=52
PLUS_PLUS=53
MINUS_MINUS=54
DECLARE_ASSIGN=55
ELLIPSIS=56
LOGICAL_OR=57
LOGICAL_AND=58
EQUALS=59
NOT_EQUALS=60
LESS=61
LESS_OR_EQUALS=62
GREATER=63
GREATER_OR_EQUALS=64
OR=65
DIV=66
MOD=67
LSHIFT=68
RSHIFT=69
BIT_CLEAR=70
EXCLAMATION=71
PLUS=72
MINUS=73
CARET=74
STAR=75
AMPERSAND=76
RECEIVE=77
DECIMAL_LIT=78
BINARY_LIT=79
OCTAL_LIT=80
HEX_LIT=81
FLOAT_LIT=82
DECIMAL_FLOAT_LIT=83
HEX_FLOAT_LIT=84
IMAGINARY_LIT=85
RUNE_LIT=86
BYTE_VALUE=87
OCTAL_BYTE_VALUE=88
HEX_BYTE_VALUE=89
LITTLE_U_VALUE=90
BIG_U_VALUE=91
RAW_STRING_LIT=92
INTERPRETED_STRING_LIT=93
WS=94
COMMENT=95
TERMINATOR=96
LINE_COMMENT=97
'assert'=1
'assume'=2
'requires'=3
'ensures'=4
'invariant'=5
'pure'=6
'old'=7
'forall'=8
'exists'=9
'acc'=10
'in'=11
'range'=12
'shared'=13
'exclusive'=14
'predicate'=15
'break'=16
'default'=17
'func'=18
'interface'=19
'select'=20
'case'=21
'defer'=22
'go'=23
'map'=24
'struct'=25
'chan'=26
'else'=27
'goto'=28
'package'=29
'switch'=30
'const'=31
'fallthrough'=32
'if'=33
'type'=34
'continue'=35
'for'=36
'import'=37
'return'=38
'var'=39
'nil'=40
'('=42
')'=43
'{'=44
'}'=45
'['=46
']'=47
'='=48
','=49
';'=50
':'=51
'.'=52
'++'=53
'--'=54
':='=55
'...'=56
'||'=57
'&&'=58
'=='=59
'!='=60
'<'=61
'<='=62
'>'=63
'>='=64
'|'=65
'/'=66
'%'=67
'<<'=68
'>>'=69
'&^'=70
'!'=71
'+'=72
'-'=73
'^'=74
'*'=75
'&'=76
'<-'=77
