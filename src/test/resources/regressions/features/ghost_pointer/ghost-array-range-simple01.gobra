// Any copyright is dedicated to the Public Domain.
// http://creativecommons.org/publicdomain/zero/1.0/

package GhostArrayRangeSimple01

ghost
decreases
ensures acc(x[0]) && acc(x[1])
func GhostFunc() (x [2]gpointer[int]) {
    arr@ := [2]gpointer[int]{ new(int), new(int) }
    return arr
}

ghost
decreases
requires acc(p[0]) && acc(p[1])
func GhostArrayRange(p [2]*int) {
	invariant acc(p[0])
	invariant acc(p[1])
	invariant 0 <= i && i <= len(p)
	decreases len(p) - i0
	for i, j := range p with i0 {
		assert j != nil
		v := *j
		v = *p[i]
		// assignment is not possible
		// *j = 42
	}

    x := GhostFunc()
    invariant acc(x[0])
    invariant acc(x[1])
    invariant 0 <= i && i <= len(x)
    decreases len(x) - i0
    for i, j := range x with i0 {
    	assert j != nil
        v := *j
        v = *p[i]
        // assigning should be possible:
        *j = 42
    }
}

ghost
func ActualPtrArrayRange() {
    arr@ := [2]int{ 0, 1 }
    p := &arr
    var elem int
    for elem = range(p) with i0 {

    }
}
